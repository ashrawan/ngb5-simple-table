{"version":3,"sources":["./dist/projects/ngb5-simple-table/src/lib/ngb5-simple-table.service.ts","./dist/projects/ngb5-simple-table/src/lib/ngb5-simple-table.model.ts","./dist/projects/ngb5-simple-table/src/lib/ngb5-simple-table.component.ts","./dist/projects/ngb5-simple-table/src/lib/pipe/obj-keys.pipe.ts","./dist/projects/ngb5-simple-table/src/lib/st-column-sort/st-column-sort.directive.ts","./dist/projects/ngb5-simple-table/src/lib/st-pagination/st-pagination.component.ts","./dist/projects/ngb5-simple-table/src/lib/ngb5-simple-table.module.ts","./dist/projects/ngb5-simple-table/src/public-api.ts","./dist/projects/ngb5-simple-table/src/ngb5-simple-table.ts","./projects/demo/src/app/app.module.ts","./projects/demo/src/app/app.component.ts","./projects/demo/src/app/app.component.html","./projects/demo/src/app/app-routing.module.ts","./projects/demo/src/environments/environment.ts","./projects/demo/src/app/simple/simple.component.ts","./projects/demo/src/app/simple/simple.component.html","./projects/demo/src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":["_cloneDeep","_get"],"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","file":"main.js","sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class Ngb5SimpleTableService {\n\n  constructor() { }\n}\n","\r\nexport type SortDirection = 'asc' | 'desc' ;\r\nexport const SortRotation: { [key: string]: SortDirection } = { asc: 'desc', desc: 'asc' };\r\n\r\nexport interface SortEvent {\r\n  column: Column;\r\n  direction: SortDirection;\r\n}\r\nexport interface TableStateEvent {\r\n  sortEvent: SortEvent;\r\n  pageNo: number;\r\n  pageSize: number;\r\n}\r\n\r\n\r\nexport enum ColumnType {\r\n  STRING = 'string', NUMBER = 'number', DATE = 'date', LINK = 'link', OBJECT = 'OBJECT', OTHER = 'other'\r\n}\r\n\r\nexport interface Column {\r\n  id: number;\r\n  name: string;\r\n  label: string;\r\n  type: ColumnType;\r\n  bindKeys?: Array<string>;\r\n  cssClasses?: string;\r\n  cssValueMap?: { [dataValue: string]: string };\r\n  sortable?: boolean;\r\n  filterable?: boolean;\r\n  hide?: boolean;\r\n  parseValue?: (func: (item) => string ) => string;\r\n}\r\n\r\n// Table Display Properties\r\nexport class TableUI {\r\n  tableBordered: boolean = true;\r\n  tableResponsive: boolean = true;\r\n  tableHover: boolean = true;\r\n  tableStripped: boolean = true;\r\n  additionalCSSClass: string = '';\r\n  // TODO Pagination Display Config\r\n}\r\n","import {\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  EventEmitter,\n  Input,\n  OnChanges,\n  OnInit,\n  Output,\n  TemplateRef,\n  ViewChild\n} from '@angular/core';\nimport {get as _get} from 'lodash';\nimport {cloneDeep as _cloneDeep} from 'lodash';\nimport { Column, ColumnType, SortDirection, SortEvent, TableStateEvent, TableUI } from './ngb5-simple-table.model';\n\n@Component({\n  selector: 'ngb5-simple-table',\n  templateUrl: './ngb5-simple-table.component.html',\n  styles: [  ]\n})\nexport class Ngb5SimpleTableComponent implements OnInit, OnChanges {\n\n  readonly ColumnType = ColumnType;\n\n  @Input() title = '';\n  @Input() columns: Column[];\n  @Input() dataList: Array<any> = [];\n  @Input() totalElements = 0; // Not required if \"staticPagination = true\"\n\n  // Optional Fields\n  @Input() pageSize = 5;\n  @Input() perPageOptions: number[] = [5, 20, 50];\n  @Input() sortColumnName: string;\n  @Input() searchTemplate: TemplateRef<any>;\n  @Input() actionTemplate: { [columnName: string]: TemplateRef<any> };\n\n  /**\n   * with staticPagination = true: Performs Client side pagination, No dynamic data fetch required,\n   * But Emtited values are still available\n   * Pgination is done on the full \"dataList\" using slicing operation\n   */\n  @Input() staticPagination = false;\n\n  // ===== Optional UI Display ===========\n  @Input() tableUI: TableUI = new TableUI();\n  // Pagination Fields. TODO: Create NgbNavigationConfig interface and populate pagination fields\n  @Input() boundaryLinks = false; // false: first and last buttons will be hidden\n  @Input() directionLinks = true; // false: previous and next buttons will be hidden\n\n  // Output\n  @Output() sort = new EventEmitter<SortEvent>();\n  @Output() pageChange = new EventEmitter<number>();\n  @Output() tableStateEvent = new EventEmitter<TableStateEvent>();\n\n  sortColumn: Column;\n  currentPage = 1;\n  sortDirection: SortDirection = 'asc';\n\n  searchTerm = '';\n  @ViewChild('searchInput') searchInput: ElementRef<HTMLInputElement>;\n\n  isCaseSensitiveSearch = false;\n  noDataColumnCount: number;\n  tempFullDataList: Array<any> = []; // temp full data list for \"staticPagination\"\n\n  constructor(private changeDetection: ChangeDetectorRef) {\n  }\n\n  ngOnInit(): void {\n  }\n\n  ngOnChanges(): void {\n    this.initializeDefaultValues();\n  }\n\n  initializeDefaultValues(): void {\n    if (this.dataList === null || this.dataList === undefined) {\n      this.dataList = [];\n    }\n    if (this.dataList.length <= 0) {\n      const actionTemplateKeysCount = this.actionTemplate ? Object.keys(this.actionTemplate)?.length : 0;\n      this.noDataColumnCount = this.columns?.length || 0 + actionTemplateKeysCount;\n    }\n    if (this.staticPagination) {\n      this.tempFullDataList = _cloneDeep(this.dataList);\n      this.totalElements = this.dataList.length;\n    }\n    if ((this.columns?.length > 0) && !(this.sortColumnName && this.sortColumnName.length > 0)) {\n      this.sortColumn = this.columns[0];\n      this.sortColumnName = this.columns[0].name;\n    }\n    this.changeDetection.detectChanges();\n  }\n\n  onSortTriggered(sortEvent: SortEvent): void {\n    // console.log('onSortTriggered ', sortEvent);\n    this.sortColumn = sortEvent.column;\n    this.sortColumnName = sortEvent.column.name;\n    this.sortDirection = sortEvent.direction;\n    if (this.staticPagination) {\n      const dataList = this.dataList.sort((a: any, b: any) => this.compareForSort(a, b));\n      this.dataList = this.sortDirection === 'asc' ? dataList : dataList.reverse();\n    }\n    this.sort.emit(sortEvent);\n    this.prepareAndEmitTableStateEvent();\n  }\n\n  private compareForSort(a, b): number {\n    const columnName = this.sortColumn.name;\n    let firstColumnValue = a[columnName];\n    let secondColumnValue = b[columnName];\n    if (this.sortColumn.type === ColumnType.OBJECT) {\n      firstColumnValue = this.getObjValueFromPath(a, this.sortColumn.bindKeys);\n      secondColumnValue = this.getObjValueFromPath(b, this.sortColumn.bindKeys);\n    }\n    if (firstColumnValue === secondColumnValue) {\n      return 0;\n    }\n    return firstColumnValue > secondColumnValue ? 1 : -1;\n  }\n\n\n  onPageChangeTriggered($event): void {\n    // console.log('onPageChangeTriggered ', this.currentPage);\n    this.pageChange.emit(this.currentPage);\n    this.prepareAndEmitTableStateEvent();\n  }\n\n  onPageSizeChange(): void {\n    // console.log('onPageSizeChange ', this.pageSize);\n    this.prepareAndEmitTableStateEvent();\n  }\n\n  private prepareAndEmitTableStateEvent(): void {\n    const tableStateEvent: TableStateEvent = {\n      sortEvent: {column: this.sortColumn, direction: this.sortDirection},\n      pageNo: this.currentPage,\n      pageSize: this.pageSize,\n    };\n    // console.log('emitting table state event ', tableStateEvent);\n    this.changeDetection.detectChanges();\n    this.tableStateEvent.emit(tableStateEvent);\n  }\n\n  toggleCaseSensitive(): void {\n    this.isCaseSensitiveSearch = !this.isCaseSensitiveSearch;\n    this.offlineSearchInTable();\n    this.searchInput?.nativeElement?.focus();\n  }\n\n  offlineSearchInTable(): void {\n    if (this.searchTerm && this.searchTerm.length > 0) {\n      const searchTerm = this.searchTerm;\n      const filteredDataList = this.tempFullDataList.filter(obj => {\n        // check if present in any object value\n        let hasMatch = false;\n        for (const column of this.columns) {\n          let hasSearchTerm = false;\n          if (column.type === ColumnType.OBJECT) {\n            const value = this.getObjValueFromPath(obj, column.bindKeys) || '';\n            hasSearchTerm = this.checkIfIncludesTerm(value, searchTerm);\n          } else {\n            const value = obj[column.name] || '';\n            hasSearchTerm = this.checkIfIncludesTerm(value.toString(), searchTerm);\n          }\n          hasMatch = hasSearchTerm;\n          if (hasMatch) {\n            break;\n          }\n        }\n        return hasMatch;\n      });\n      this.dataList = filteredDataList;\n    } else {\n      this.dataList = this.tempFullDataList;\n    }\n    this.changeDetection.detectChanges();\n  }\n\n  private checkIfIncludesTerm(value: string, term: string): boolean {\n    if (this.isCaseSensitiveSearch) {\n      return value.includes(term);\n    }\n    return value.toLowerCase().includes(term.toLowerCase());\n  }\n\n  getObjValueFromPath(object, path: Array<string>): string {\n    return _get(object, path);\n  }\n\n}\n","import {Pipe, PipeTransform} from '@angular/core';\n\n@Pipe({\n  name: 'objKeys'\n})\nexport class ObjKeysPipe implements PipeTransform {\n\n  transform(value: any, ...args: any[]): unknown {\n    if (value === null || value === undefined) {\n      return [];\n    }\n    return Object.keys(value);\n  }\n\n}\n","import {Directive, EventEmitter, HostBinding, HostListener, Input, Output} from '@angular/core';\nimport { Column, SortDirection, SortEvent, SortRotation } from '../ngb5-simple-table.model';\n\n@Directive({\n  selector: 'th[libStColumnSort]'\n})\nexport class StColumnSortDirective {\n\n  @Input() column: Column;\n  @Input() direction: SortDirection = 'asc';\n  @Output() sort = new EventEmitter<SortEvent>();\n\n  @HostBinding('class.asc') get isAscending(): boolean {\n    return this.direction === 'asc';\n  }\n\n  @HostBinding('class.desc') get isDescending(): boolean {\n    return this.direction === 'desc';\n  }\n\n  @HostListener('click') rotate(): any {\n    this.direction = SortRotation[this.direction];\n    const sortEvent: SortEvent = {column: this.column, direction: this.direction};\n    this.sort.emit(sortEvent);\n  }\n\n}\n","import {ChangeDetectorRef, Component, EventEmitter, forwardRef, Input, OnInit, Output, Provider} from '@angular/core';\nimport {PageChangedEvent, PagesModel} from './st-pagination.model';\nimport {ControlValueAccessor, NG_VALUE_ACCESSOR} from '@angular/forms';\n\nexport const PAGINATION_CONTROL_VALUE_ACCESSOR: Provider = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => StPaginationComponent),\n  multi: true\n};\n\n/**\n * Referenced taken from package ngx-bootstrap to create this pagination Component class.\n */\n@Component({\n  selector: 'lib-st-pagination',\n  templateUrl: './st-pagination.component.html',\n  providers: [PAGINATION_CONTROL_VALUE_ACCESSOR]\n})\nexport class StPaginationComponent implements ControlValueAccessor, OnInit {\n\n  /** if `true` aligns each link to the sides of pager */\n  @Input() align = true;\n  /** limit number for page links in pager */\n  @Input() maxSize?: number;\n  /** if false first and last buttons will be hidden */\n  @Input() boundaryLinks = false;\n  /** if false previous and next buttons will be hidden */\n  @Input() directionLinks = true;\n  // labels\n  /** first button text */\n  @Input() firstText?: string;\n  /** previous button text */\n  @Input() previousText?: string;\n  /** next button text */\n  @Input() nextText?: string;\n  /** last button text */\n  @Input() lastText?: string;\n  /** if true current page will in the middle of pages list */\n  @Input() rotate = true;\n  // css\n  /** add class to <code><li\\></code> */\n  @Input() pageBtnClass = '';\n  /** if true pagination component will be disabled */\n  @Input() disabled = false;\n  /** custom template for page link */\n\n  /** fired when total pages count changes, $event:number equals to total pages count */\n  @Output() numPages = new EventEmitter<number>();\n  /** fired when page was changed, $event:{page, itemsPerPage} equals to object\n   * with current page index and number of items per page\n   */\n  @Output() pageChanged = new EventEmitter<PageChangedEvent>();\n  onChange = Function.prototype;\n  onTouched = Function.prototype;\n  classMap = '';\n  pages?: PagesModel[];\n  protected inited = false;\n\n  constructor(private changeDetection: ChangeDetectorRef) {\n  }\n\n  protected _itemsPerPage = 10;\n\n  /** maximum number of items per page. If value less than 1 will display all items on one page */\n  @Input()\n  get itemsPerPage(): number {\n    return this._itemsPerPage;\n  }\n\n  set itemsPerPage(v: number) {\n    this._itemsPerPage = v;\n    this.totalPages = this.calculateTotalPages();\n  }\n\n  protected _totalItems = 0;\n\n  /** total number of items in all pages */\n  @Input()\n  get totalItems(): number {\n    return this._totalItems;\n  }\n\n  set totalItems(v: number) {\n    this._totalItems = v;\n    this.totalPages = this.calculateTotalPages();\n  }\n\n  protected _totalPages = 0;\n\n  get totalPages(): number {\n    return this._totalPages;\n  }\n\n  set totalPages(v: number) {\n    this._totalPages = v;\n    this.numPages.emit(v);\n    if (this.inited) {\n      this.selectPage(this.page);\n    }\n  }\n\n  protected _page = 1;\n\n  get page(): number {\n    return this._page;\n  }\n\n  set page(value: number) {\n    const _previous = this._page;\n    this._page = value > this.totalPages ? this.totalPages : value || 1;\n    this.changeDetection.markForCheck();\n\n    if (_previous === this._page || typeof _previous === 'undefined') {\n      return;\n    }\n\n    this.pageChanged.emit({\n      page: this._page,\n      itemsPerPage: this.itemsPerPage\n    });\n  }\n\n  ngOnInit(): void {\n\n    // watch for maxSize\n    if (typeof this.maxSize === 'undefined') {\n      this.maxSize = 0;\n    }\n\n    if (typeof this.rotate === 'undefined') {\n      this.rotate = false;\n    }\n\n    if (typeof this.boundaryLinks === 'undefined') {\n      this.boundaryLinks = true;\n    }\n\n\n    if (typeof this.directionLinks === 'undefined') {\n      this.directionLinks = true;\n    }\n\n    if (typeof this.pageBtnClass === 'undefined') {\n      this.pageBtnClass = '';\n    }\n\n    // base class\n    if (typeof this.itemsPerPage === 'undefined') {\n      this.itemsPerPage = 0;\n    }\n\n    this.totalPages = this.calculateTotalPages();\n    // this class\n    this.pages = this.getPages(this.page, this.totalPages);\n    this.inited = true;\n  }\n\n  writeValue(value: number): void {\n    this.page = value;\n    this.pages = this.getPages(this.page, this.totalPages);\n  }\n\n  getText(key: string): string {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return (this as any)[`${key}Text`] || (this as any).config[`${key}Text`];\n  }\n\n  noPrevious(): boolean {\n    return this.page === 1;\n  }\n\n  noNext(): boolean {\n    return this.page === this.totalPages;\n  }\n\n  registerOnChange(fn: () => void): void {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: () => void): void {\n    this.onTouched = fn;\n  }\n\n  selectPage(page: number, event?: Event): void {\n    if (event) {\n      event.preventDefault();\n    }\n\n    if (!this.disabled) {\n      if (event && event.target) {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        const target: any = event.target;\n        target.blur();\n      }\n      this.writeValue(page);\n      this.onChange(this.page);\n    }\n  }\n\n  // Create page object used in template\n  protected makePage(\n    num: number,\n    text: string,\n    active: boolean\n  ): { number: number; text: string; active: boolean } {\n    return {text, number: num, active};\n  }\n\n  protected getPages(currentPage: number, totalPages: number): PagesModel[] {\n    const pages: PagesModel[] = [];\n\n    // Default page limits\n    let startPage = 1;\n    let endPage = totalPages;\n    const isMaxSized =\n      typeof this.maxSize !== 'undefined' && this.maxSize < totalPages;\n\n    // recompute if maxSize\n    if (isMaxSized && this.maxSize) {\n      if (this.rotate) {\n        // Current page is displayed in the middle of the visible ones\n        startPage = Math.max(currentPage - Math.floor(this.maxSize / 2), 1);\n        endPage = startPage + this.maxSize - 1;\n\n        // Adjust if limit is exceeded\n        if (endPage > totalPages) {\n          endPage = totalPages;\n          startPage = endPage - this.maxSize + 1;\n        }\n      } else {\n        // Visible pages are paginated with maxSize\n        startPage =\n          (Math.ceil(currentPage / this.maxSize) - 1) * this.maxSize + 1;\n\n        // Adjust last page if limit is exceeded\n        endPage = Math.min(startPage + this.maxSize - 1, totalPages);\n      }\n    }\n\n    // Add page number links\n    for (let num = startPage; num <= endPage; num++) {\n      const page = this.makePage(num, num.toString(), num === currentPage);\n      pages.push(page);\n    }\n\n    // Add links to move between page sets\n    if (isMaxSized && !this.rotate) {\n      if (startPage > 1) {\n        const previousPageSet = this.makePage(startPage - 1, '...', false);\n        pages.unshift(previousPageSet);\n      }\n\n      if (endPage < totalPages) {\n        const nextPageSet = this.makePage(endPage + 1, '...', false);\n        pages.push(nextPageSet);\n      }\n    }\n\n    return pages;\n  }\n\n  // base class\n  protected calculateTotalPages(): number {\n    const totalPages =\n      this.itemsPerPage < 1\n        ? 1\n        : Math.ceil(this.totalItems / this.itemsPerPage);\n\n    return Math.max(totalPages || 0, 1);\n  }\n\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { ObjKeysPipe } from './pipe/obj-keys.pipe';\nimport { StColumnSortDirective } from './st-column-sort/st-column-sort.directive';\nimport { StPaginationComponent } from './st-pagination/st-pagination.component';\nimport { Ngb5SimpleTableComponent } from './ngb5-simple-table.component';\n\n\n@NgModule({\n  declarations: [\n    StPaginationComponent,\n    ObjKeysPipe,\n    StColumnSortDirective,\n    Ngb5SimpleTableComponent,\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n  ],\n  exports: [Ngb5SimpleTableComponent]\n})\nexport class Ngb5SimpleTableModule { }\n","/*\n * Public API Surface of ngb5-simple-table\n */\n\nexport * from './lib/ngb5-simple-table.service';\nexport * from './lib/ngb5-simple-table.component';\nexport * from './lib/ngb5-simple-table.module';\n\nexport * from './lib/ngb5-simple-table.model';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n\nexport {ObjKeysPipe as ɵc} from './lib/pipe/obj-keys.pipe';\nexport {StColumnSortDirective as ɵd} from './lib/st-column-sort/st-column-sort.directive';\nexport {PAGINATION_CONTROL_VALUE_ACCESSOR as ɵa,StPaginationComponent as ɵb} from './lib/st-pagination/st-pagination.component';","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { Ngb5SimpleTableModule } from 'ngb5-simple-table';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { SimpleComponent } from './simple/simple.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    SimpleComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    Ngb5SimpleTableModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'demo';\n}\n","\r\n\r\n  <nav class=\"navbar navbar-light bg-light\">\r\n    <div class=\"container-fluid justify-content-end\">\r\n      <span class=\"navbar-brand mb-0 h1\">\r\n        <a class=\"nav-link\" href=\"http://github.com/ashrawan/ngb5-simple-table\">Github</a>\r\n      </span>\r\n    </div>\r\n  </nav>\r\n\r\n\r\n<router-outlet></router-outlet>","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { SimpleComponent } from './simple/simple.component';\n\nconst routes: Routes = [\n  {path: '', component: SimpleComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit } from '@angular/core';\nimport { Column, ColumnType } from 'ngb5-simple-table';\n\n@Component({\n  selector: 'app-simple',\n  templateUrl: './simple.component.html',\n  styleUrls: ['./simple.component.scss']\n})\nexport class SimpleComponent implements OnInit {\n\n  todoList = [\n    {\n      \"id\": 1,\n      \"title\": \"delectus aut autem\",\n      \"completed\": false\n    },\n    {\n      \"id\": 2,\n      \"title\": \"quis ut nam facilis et officia qui\",\n      \"completed\": false\n    },\n    {\n      \"id\": 3,\n      \"title\": \"fugiat veniam minus\",\n      \"completed\": false\n    },\n    {\n      \"id\": 4,\n      \"title\": \"et porro tempora\",\n      \"completed\": true\n    },\n    {\n      \"id\": 5,\n      \"title\": \"laboriosam mollitia et enim quasi adipisci quia provident illum\",\n      \"completed\": false\n    },\n    {\n      \"id\": 6,\n      \"title\": \"est dicta totam qui explicabo doloribus qui dignissimos\",\n      \"completed\": false\n    },\n    {\n      \"id\": 7,\n      \"title\": \"perspiciatis velit id laborum placeat iusto et aliquam odio\",\n      \"completed\": false\n    },\n    {\n      \"id\": 8,\n      \"title\": \"et sequi qui architecto ut adipisci\",\n      \"completed\": true\n    },\n    {\n      \"id\": 9,\n      \"title\": \"odit optio omnis qui sunt\",\n      \"completed\": true\n    },\n    {\n      \"id\": 10,\n      \"title\": \"et placeat et tempore aspernatur sint numquam\",\n      \"completed\": false\n    },\n    {\n      \"id\": 11,\n      \"title\": \"doloremque aut dolores quidem fuga qui nulla\",\n      \"completed\": true\n    },\n    {\n      \"id\": 12,\n      \"title\": \"voluptas consequatur qui ut quia magnam nemo esse\",\n      \"completed\": false\n    },\n    {\n      \"id\": 13,\n      \"title\": \"fugiat pariatur ratione ut asperiores necessitatibus magni\",\n      \"completed\": false\n    },\n    {\n      \"id\": 14,\n      \"title\": \"rerum eum molestias autem voluptatum sit optio\",\n      \"completed\": false\n    },\n    {\n      \"id\": 15,\n      \"title\": \"quia voluptatibus voluptatem quos similique maiores repellat\",\n      \"completed\": false\n    },\n    {\n      \"id\": 16,\n      \"title\": \"aut id perspiciatis voluptatem iusto\",\n      \"completed\": false\n    },\n    {\n      \"id\": 17,\n      \"title\": \"doloribus sint dolorum ab adipisci itaque dignissimos aliquam suscipit\",\n      \"completed\": false\n    },\n  ];\n\n  todoColumns: Column[] = [\n    { id: 1, name: 'id', label: 'SN', type: ColumnType.STRING },\n    { id: 2, name: 'title', label: 'Title', type: ColumnType.STRING },\n    { id: 3, name: 'completed', label: 'Completed', type: ColumnType.STRING },\n  ];\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","\r\n<div class=\"container\">\r\n\r\n    <h3 class=\"text-center\">Simple Table Example</h3>\r\n\r\n    <div class=\"mb-2\">\r\n        <ngb5-simple-table  [title]=\"'Todo List'\"\r\n                            [dataList]=\"todoList\" \r\n                            [columns]=\"todoColumns\" \r\n                            [staticPagination]=\"true\">\r\n        </ngb5-simple-table>\r\n    </div>\r\n\r\n    <hr/>\r\n\r\n    <!-- TODO Use code blocks prismjs or other to display these blocks -->\r\n    <h4 class=\"text-center\">Code Sample</h4>\r\n\r\n    <div class=\"row border border-1 mb-5 py-1\">\r\n        <div class=\"col-12 border-end border-3 border-primary mb-3\">\r\n            <h5>Data List:</h5>\r\n            \r\n            <code class=\"text-secondary\">\r\n                <div>&nbsp;todoList = &#91;</div>\r\n                    <div>&nbsp;&nbsp;&nbsp;&nbsp;&#123;\"id\":1,\"title\":\"delectus&nbsp;aut&nbsp;autem\",\"completed\":false&#125;,</div>\r\n                    <div>&nbsp;&nbsp;&nbsp;&nbsp;&#123;\"id\":2,\"title\":\"quis&nbsp;ut&nbsp;nam&nbsp;facilis&nbsp;et&nbsp;officia&nbsp;qui\",\"completed\":false&#125;,</div>\r\n                    <div>&nbsp;&nbsp;&nbsp;&nbsp;&#123;\"id\":3,\"title\":\"fugiat&nbsp;veniam&nbsp;minus\",\"completed\":false&#125;,</div>\r\n                    <div>&nbsp;&nbsp;&nbsp;&nbsp;&#123;\"id\":4,\"title\":\"et&nbsp;porro&nbsp;tempora\",\"completed\":true&#125;,</div>\r\n                <div>&nbsp; &nbsp; ...,</div>\r\n                <div>&nbsp; &nbsp; ...,</div>\r\n                <div>&#93;</div>\r\n            </code>\r\n        </div>\r\n\r\n        <div class=\"col-6 border-start border-end border-3 border-primary\">\r\n            <h5>Columns Defination:</h5>\r\n\r\n            <code class=\"text-primary\">\r\n                <div>&nbsp; todoColumns: Column&#91;&#93; = &#91;</div>\r\n                <div>&nbsp; &nbsp; &#123; id: 1, name: 'id', label: 'SN', type: ColumnType.STRING &#125;,</div>\r\n                <div>&nbsp; &nbsp; &#123; id: 2, name: 'title', label: 'Title', type: ColumnType.STRING &#125;,</div>\r\n                <div>&nbsp; &nbsp; &#123; id: 3, name: 'completed', label: 'Completed', type: ColumnType.STRING &#125;,</div>\r\n                <div>&nbsp; &#93;;</div>\r\n            </code>\r\n        </div>\r\n\r\n        <div class=\"col-6 border-end border-3 border-primary\">\r\n            <h5>Using in Template:</h5>\r\n            <code>\r\n                <div>\r\n                    <div>&nbsp; &nbsp; &lt;ngb5-simple-table &nbsp;[title]=\"'Todo List'\"</div>\r\n                    <div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; [dataList]=\"todoList\"</div>\r\n                    <div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; [columns]=\"todoColumns\"</div>\r\n                    <div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; [staticPagination]=\"true\"&gt;</div>\r\n                    <div>&nbsp; &nbsp; &lt;/ngb5-simple-table&gt;</div>\r\n                </div>\r\n            </code>\r\n        </div>\r\n\r\n    </div>\r\n\r\n    <br/>\r\n    <br/>\r\n    <br/>\r\n    <br/>\r\n\r\n\r\n</div>","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}